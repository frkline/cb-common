# A sample Guardfile
# More info at https://github.com/guard/guard#readme

# Guard::Kitchen
# https://github.com/test-kitchen/guard-kitchen
guard 'kitchen', :all_on_start => true do
  watch(%r{test/.+})
  watch(%r{^recipes/(.+)\.rb$})
  watch(%r{^attributes/(.+)\.rb$})
  watch(%r{^files/(.+)})
  watch(%r{^templates/(.+)})
  watch(%r{^providers/(.+)\.rb})
  watch(%r{^resources/(.+)\.rb})
end

# Guard::Foodcritic
# https://github.com/cgriego/guard-foodcritic
guard "foodcritic", :cookbook_paths => ".", :cli => "--epic-fail any -I foodcritic/*", :all_on_start => true do  
  watch(%r{attributes/.+\.rb$})
  watch(%r{providers/.+\.rb$})
  watch(%r{recipes/.+\.rb$})
  watch(%r{resources/.+\.rb$})
  watch('metadata.rb')
end

# Guard:RSpec
# https://github.com/guard/guard-rspec
guard :rspec, cmd: 'bundle exec rspec', :all_on_start => true do
  watch(%r{^spec/(.+)_spec\.rb$})
  watch(%r{^(recipes)/(.+)\.rb$})   { |m| "spec/#{m[1]}_spec.rb" }
  watch('spec/spec_helper.rb')      { 'spec' }
end

# Guard::Rubocop
# https://github.com/yujinakayama/guard-rubocop
guard :rubocop, :all_on_start => true do
  watch(%r{.+\.rb$})
  watch(%r{(?:.+/)?\.rubocop\.yml$}) { |m| File.dirname(m[0]) }
end
